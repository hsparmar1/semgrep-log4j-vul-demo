package com.semgrep;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

import java.io.*;
import java.util.*;
import java.security.cert.*;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;

public class Log4j_Vulnerability implements HttpHandler
{
  static Logger log = 
            LogManager.getLogger(Log4j_Vulnerability.class.getName());

  /**
   * A simple HTTP endpoint that reads the request's x-api-version header and logs it back. This is used to explain the vulnerability, and not a full example.
   *
   */
  public void handle(HttpExchange _he) throws IOException
  {
    Map apiVersionMap = _he.getRequestHeaders();
    log.info("Requested Api Version:{}", apiVersionMap);

    String response = "<h1>Hello from: " + apiVersionMap + "!</h1>";
    _he.sendResponseHeaders(200, response.length());
    OutputStream os = _he.getResponseBody();
    os.write(response.getBytes());
    os.close();
  }
}
